1.몇명이서 게임을 진행할건지 숫자를 입력받는다.
2.참가자간의 순서를 정한다.(1 2 3 4 ...)
3.참가자에게 단어를 입력받는데 만약 첫번째 참가자인 경우 다음 참가자에게 넘어가고
4.처음 참가자가 아닌경우 이전 참가자와 끝말있기 룰에 의해 단어를 비교한다. 


코드 최적화

코드에서도 공통된 부분이 보이지만 논리적으로 판단해보자.

우선 최 상단 분기점은
처음 참가한 참가자인지 , 아니면 처음의 참가자가 아닌지에 대한 분기 
그 다음 세부적으로 나눠 지는데
통과 했을시 순서를 다음으로 넘기는 로직이 겹친다. 코드 상으로도 겹치고 논리적으로도 살펴보면

a.우선 처음 참가자의 경우 비교할 단어가 없음으로 바로 다음 순서로 넘긴다.

b.처음 참가자가 아닌경우 
만약 끝말잇기의 룰을 통과한다면 다음 순서로 넘긴다. 

이제 코드를 최적화 해보면 
|| 연산자를 이용해서 a || b 이런식으로 조건식을 하나로 묶을 수 있을것 같다. 




1.몇 명이 참가할것인지 사용자에게 입력을 받는다. -> prompt 함수를 이용해서 입력받고 변수에 저장
2.사용자간의 순서를 정한다. 
<분기점>
3.끝말있기의 규칙에 맞다면 다음 사용자로 넘어가고
4.끝말있기의 규칙에 위배된다면 게임이 끝난다. 

<분기점>
순서가 처음인지 혹은 아닌지 
구별하는 방법은 제시어라는 변수를 만들어서 그 값이 undefined이면 처음 사용자 

<분기점>
순서를 구별하는 방법은 
order라는 변수를 만들어서 만약 참가자가 3명이라면 1 , 2 , 3 , 1 , 2 , 3 이런식으로 흘러갈텐데
현재 order + 1  > 사용자 수 일때 1로 초기화하면 된다. 

<분기점>
사용자의 편의를 위해 입력창을 자동으로 지워주고 자동으로 focus가 올라가게 해준다. 

<분기점>

제시어가 처음일때 (입력창이 비어있을때) 단어가 맞다면 -> 단어의 맞고 틀림 유무에 상관없이 다음순서로 감
제시어가 처음일때 (입력창이 비어있을때) 단어가 틀리다면 -> 단어의 맞고 틀림 유무에 상관없이 다음 순서로 감

제시어가 처음이 아닐떄(입력창이 비어있지 않을 때) 단어가 맞다면 -> 다음 순서로감
제시어가 처음이 아닐때(입력창이 비어있지 않을 때) 단어가 틀리다면 -> 탈락함 

즉 다음 순서로 가는 3가지 경우가 겹침 탈락하는 경우는 오직 단어가 틀렸을때만 

그렇다면 

분기점을 다시 나눌 수 있다.

제시어가 처음이거나 단어가 맞다면 vs 단어가 틀릴 때 